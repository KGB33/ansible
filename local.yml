- hosts: localhost
  vars_files:
    - vars/pacman_packages.yml
    - vars/aur_packages.yml
    - vars/pipx_packages.yml
  tasks:
    - name: Update pacman.conf Settings
      lineinfile:
        path: /etc/pacman.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^#Color', line: 'Color' }
        - { regexp: '^#VerbosePkgLists', line: 'VerbosePkgLists' }
        - { regexp: '^#ParallelDownloads', line: 'ParallelDownloads = 7' }
    - name: Install Reflector
      become: yes
      pacman:
        name: reflector
        state: present
    - name: Update Reflector Settings
      lineinfile:
        path: /etc/xdg/reflector/reflector.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^# --country France,Germany', line: '--country US,CA ' }
        - { regexp: '^--latest', line: '--latest 50' }
    - name: Enable Reflector.timer
      systemd:
        name: reflector.timer
        state: started
        enabled: yes

    - name: Install Packages
      become: yes
      pacman:
        name: "{{pacman_packages}}"
        state: present

    - name: Create AUR-Builder User 
      user: name=aur_builder
    - name: Give aur_builder Pacman privileges
      lineinfile:
        path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
        state: present
        line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
        validate: /usr/sbin/visudo -cf %s
        create: yes

    - name: Install paru
      become: yes
      become_user: aur_builder
      args:
        creates: /usr/bin/paru
      shell: |
        cd ~
        git clone https://aur.archlinux.org/paru.git 
        cd paru 
        yes | makepkg -si 
        cd - 
        rm -rf paru

    - name: Install AUR Packages
      become: yes
      become_user: aur_builder
      pacman:
        name: "{{aur_packages}}"
        state: present
        executable: paru

    - name: Install pipx Packages
      community.general.pipx:
        name: "{{ item }}"
      with_items:
        - "{{ pipx_packages }}"

    - name: Give kgb33 sudo rights
      lineinfile:
        path: /etc/sudoers.d/kgb33-sudo
        state: present
        line: "kgb33 ALL=(ALL) ALL"
        validate: /usr/sbin/visudo -cf %s
        create: yes

    - name: Ensure Docker Group Exists
      group:
        name: docker
        state: present

    - name: Add kgb33 to the docker role
      user:
        name: kgb33
        groups: docker
        append: yes

    - name: Install dotfiles
      become: yes
      become_user: kgb33
      tags:
        - dots
      args:
        creates: /home/kgb33/.dotfiles/
      shell: |
        cd $HOME 
        git clone --bare git@github.com:KGB33/.dotfiles.git $HOME/.dotfiles
        /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME checkout

    - name: Enable custom pipxUpdater
      become: yes
      become_user: kgb33 
      systemd:
        name: pipxUpdate.timer
        enabled: yes
        scope: user

